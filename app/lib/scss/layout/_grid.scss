$number-words: (one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve, thirteen, fourteen, fifteen, sixteen);

// @name Grid system
// @author Tyler Benton
// @page components/grid
// @description
// Our grid stystem includes a responsive, mobile first fluid grid system that appropriately scales up to 12 columns as the device or viewport size increases.
// It includes predefined classes for easy layout options, as well as powerful mixins for generating more semantic layouts.
// You don't have to add a class onto each item in the grid to specify how many colmuns that you want it to span. This way produces extremely redundant code.
//
// @state .grid--rev - Reverses the order of each row in the grid
// @state .grid--right - Align the entire grid to the right
// @state .grid--center - Centered grids align grid items centrally without needing to use push or pull
// @state .grid--middle - Align grid cells vertically
// @state .grid--bottom - Align grid cells vertically
// @state .grid--full - Removes the spacing between the grid items.
// @state .grid-full.grid--not-full - Adds the spacing back in for other viewports.
// @state .grid--no-space - Removes the vertical space between the items in the grid
//
// @markup {html}
//  <ul class="grid grid--four-cols {$state}">
//   <li><a href="">1</a></li>
//   <li><a href="" style="height: 35px;">2</a></li>
//   <li><a href="">3</a></li>
//   <li><a href="">4</a></li>
//   <li><a href="">5</a></li>
//   <li><a href="">6</a></li>
//  </ul>

// @name Grid layouts
// @author Tyler Benton
// @page components/grid
//
// @description The top level options you have when creating a grid.
//
// @state .grid--one-col
// @state .grid--two-cols
// @state .grid--three-cols
// @state .grid--four-cols
// @state .grid--five-cols
// @state .grid--six-cols
// @state .grid--seven-cols
// @state .grid--eight-cols
// @state .grid--nine-cols
// @state .grid--ten-cols
// @state .grid--eleven-cols
// @state .grid--twelve-cols
//
// @markup {html}
//  <ul class="grid {$state}">
//   <li><a href="">1</a></li>
//   <li><a href="">2</a></li>
//   <li><a href="">3</a></li>
//   <li><a href="">4</a></li>
//   <li><a href="">5</a></li>
//   <li><a href="">6</a></li>
//  </ul>

// @name Idividual grid item overrides
// @author Tyler Benton
// @page components/grid
//
// @description
// Sometimes you just need to overide a single item. Below is how you can do that.
// However note that these classes are based off a 12 column grid system.
//
// @state .one-col
// @state .two-cols
// @state .three-cols
// @state .four-cols
// @state .five-cols
// @state .six-cols
// @state .seven-cols
// @state .eight-cols
// @state .nine-cols
// @state .ten-cols
// @state .eleven-cols
// @state .twelve-cols
//
// @markup {html}
//  <ul class="grid grid--four-cols">
//   <li><a href="">1</a></li>
//   <li><a href="">2</a></li>
//   <li class="{$state}"><a href="">{$state}</a></li>
//   <li><a href="">4</a></li>
//  </ul>
@include media("each", "breakpoint"){
 @include grid(build, false);
}