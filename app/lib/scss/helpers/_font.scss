@include import-once("font"){
 @if variable-exists(fonts) and length($fonts) > 0{
  $font-weight-types: (
   thin: 100,
   extra-light: 200, extralight: 200, // alias
   light: 300,
   normal: 400, regular: 400, // alias
   medium: 500,
   semi-bold: 600, semibold: 600, // alias
   extra-bold: 800, extrabold: 800, // alias
   ultra-bold: 900,
   bold: 700 // has to be after the other bold values because those are more specific
  );

  @each $font-family, $type-list in $fonts{
   $path: "#{get($paths, font)}/#{$font-family}/#{$font-family}";
   $type-list: if(type-of($type-list) != list, ($type-list), $type-list);
   @each $type in $type-list{
    $font-weight: if($type == "", 400, str-has($type, map-keys($font-weight-types)));
    $font-style: if($type == "", normal, str-has($type, (italic, oblique)));
    $type: if($type == "", "", "-#{$type}");

    @font-face{
     font-family: $font-family;
     src: url("#{$path}#{$type}.eot"); // IE9 Compat Modes
     src: url("#{$path}#{$type}.eot?#iefix") format("embedded-opentype"), // IE6-IE8
     url("#{$path}#{$type}.woff") format("woff"), // Modern Browsers
     url("#{$path}#{$type}.ttf") format("truetype"), // Safari, Android, iOS
     url("#{$path}#{$type}.svg##{$font-family}") format("svg"); // Legacy iOS
     font-weight: if($font-weight and type-of($font-weight) == string, map-get($font-weight-types, to-lower-case(nth($font-weight, 1))), 400);
     font-style: if($font-style, to-lower-case(nth($font-style, 1)), normal);
     font-stretch: normal;
    }

   }

  }
 }
}