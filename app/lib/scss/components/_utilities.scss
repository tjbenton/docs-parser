@include media("each", "breakpoint"){
 .#{$media}u-{

  // @name reset
  // @author Tyler Benton
  // @page components/utilities
  // @description
  // This will reset `margin-left`, `margin-right`, and `padding` to `0`, and removes the list styles
  //
  // @markup
  // <ul class="u-reset">
  //  <li>Item</li>
  //  <li>Item</li>
  //  <li>Item</li>
  // </ul>
  &reset{
   @include reset;
  }

  // @name clear
  // @author Tyler Benton
  // @page components/utilities
  // @description A helper class to clear floated elements
  //
  // @markup How to use:
  //  <style>.clear-example div{float:left;margin:0;}</style> <!-- for example only -->
  //  <div class="clear-example u-clear">
  //   <div>Item</div>
  //   <div>Item</div>
  //   <div>Item</div>
  //  </div>
  //
  // @markup (example="false") How **NOT** to use:
  //  <style>.clear-example div{float:left;margin:0;}</style> <!-- for example only -->
  //  <div class="clear-example">
  //   <div>Item</div>
  //   <div>Item</div>
  //   <div>Item</div>
  //   <br class="u-clear">
  //  </div>
  &clear{
   @include clear;
  }

  // @name Alignment
  // @author Tyler Benton
  // @page components/utilities
  // @description These have been added as helper classes to align text and images. These aren't semantic but are useful
  //
  // @markup
  // <p class="u-text-left">Left aligned text.</p>
  // <p class="u-text-center">Center aligned text.</p>
  // <p class="u-text-right">Right aligned text.</p>
  // <p class="u-text-justify">Justified text.</p>
  // <p class="u-text-nowrap">No wrap text.</p>
  &text{
   @each $item in (center, right, left, justify){
    &-#{$item}{
     text-align: $item;
    }
   }

   &-nowrap{
    overflow: hidden !important;
    text-overflow: ellipsis !important;
    white-space: nowrap !important;
   }
  }

  // @name compact
  // @author Tyler Benton
  // @page components/utilities
  //
  // @description This is used to make sections compact when needed. It is half the size of the Lobotomized Owl selector
  &compact{
   @include owl(compact);
  }

  // @name margins-off
  // @author Tyler Benton
  // @page components/utilities
  // @description This resets the margin-top to what it was originally, without the Lobotomized Owl selector
  &margins-off{
   @include owl(off);
  }

  // @name Showing and hiding content
  // @author Tyler Benton
  // @page components/utilities
  // @description
  // Force an element to be shown or hidden (including for screen readers) with the use of `.show` and `.hide` classes. These classes use `!important` to avoid specificity conflicts, just like the quick floats. They are only available for block level toggling.
  //
  // @markup {html} (example="false")
  // <div class="u-show"></div>
  // <div class="u-hide"></div>
  // <div class="u-invisible"></div>
  // <div class="u-visible"></div>
  &show{
   display: block !important;
  }
  &hide{
   display: none !important;
  }
  &hide, &invisible{
   visibility: hidden !important;
  }
  &show, &visible{
   visibility: visible !important;
  }
 }
}

// @name Wrapper
// @author Tyler Benton
// @page components/utilities
//
// @markup
// <!-- Don't write inline styles like this it's for example purposes only -->
// <div style="background: black; min-height: 20px;"> <!-- prentend it's the body -->
//  <div class="u-wrapper" style="background: gray; min-height: 20px;">
//   <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Recusandae, saepe, cupiditate, culpa, error magnam nihil totam quo amet molestias fuga expedita quibusdam aut aperiam pariatur dignissimos. Facilis laborum ullam eaque.</p>
//   <p class="u-wrapper-inverted" style="background: red;">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Recusandae, saepe, cupiditate, culpa, error magnam nihil totam quo amet molestias fuga expedita quibusdam aut aperiam pariatur dignissimos. Facilis laborum ullam eaque.</p>
//  </div>
// </div>
$wrapper:(default: 10px, md: 30px, lg: 40px);
@include namespace(utility, ".wrapper"){
 margin: 0 get($wrapper, default);
 @include media(">=md"){
  margin: 0 get($wrapper, md);
 }
 @include media(">=lg"){
  margin: 0 get($wrapper, lg);
 }
 &-inverted{
  padding: 0 get($wrapper, default);
  margin: {
   left: neg(get($wrapper, default));
   right: neg(get($wrapper, default));
  };
  @include media(">=md"){
   padding: 0 get($wrapper, md);
   margin: {
    left: neg(get($wrapper, md));
    right: neg(get($wrapper, md));
   };
  }
  @include media(">=lg"){
   padding: 0 get($wrapper, lg);
   margin: {
    left: neg(get($wrapper, lg));
    right: neg(get($wrapper, lg));
   };
  }
 }
}